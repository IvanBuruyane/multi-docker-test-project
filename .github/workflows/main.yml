# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel  
jobs:

  # This workflow contains a single job called "build"
  build:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: build frontend test image
      run: docker build -f ./client/Dockerfile.dev -t restlin1212/multi_docker_test_project .
    
    - name: run frontend tests
      run: docker run -e CI=true restlin1212/multi_docker_test_project npm test
    
    - name: build production images
      run: |
        docker build -t restlin1212/multi_docker_test_project_client ./client
        docker build -t restlin1212/multi_docker_test_project_nginx ./nginx
        docker build -t restlin1212/multi_docker_test_project_server ./server
        docker build -t restlin1212/multi_docker_test_project_worker ./worker

    - name: Login to the docker CLI
      run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u "${{secrets.DOCKER_ID}}" --password-stdin
    
    - name: Push production images to the docker hub
      run: |
        docker push restlin1212/multi_docker_test_project_client
        docker push restlin1212/multi_docker_test_project_nginx
        docker push restlin1212/multi_docker_test_project_server
        docker push restlin1212/multi_docker_test_project_worker
        
    - name: Generate deployment zip package
      run: zip -r deploy.zip . -x '*.git*'
    
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v17
      with:
        application_name: multi_docker_test_project
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        deployment_package: deploy.zip
        environment_name: Multidockertestproject-env
        region: us-east-2
        version_label: 2
        wait_for_environment_recovery: 120
